'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = Projection;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _group = require('@vx/group');

var _additionalProps = require('../util/additionalProps');

var _additionalProps2 = _interopRequireDefault(_additionalProps);

var _Graticule = require('../graticule/Graticule');

var _Graticule2 = _interopRequireDefault(_Graticule);

var _d3Geo = require('d3-geo');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

// TODO: Implement all projections of d3-geo
var projectionMapping = {
  orthographic: function orthographic() {
    return (0, _d3Geo.geoOrthographic)();
  },
  albers: function albers() {
    return (0, _d3Geo.geoAlbers)();
  },
  mercator: function mercator() {
    return (0, _d3Geo.geoMercator)();
  },
  naturalEarth: function naturalEarth() {
    return (0, _d3Geo.geoNaturalEarth1)();
  }
};

/**
 * Component for all projections.
 */
function Projection(_ref) {
  var data = _ref.data,
      _ref$projection = _ref.projection,
      projection = _ref$projection === undefined ? 'mercator' : _ref$projection,
      projectionFunc = _ref.projectionFunc,
      clipAngle = _ref.clipAngle,
      clipExtent = _ref.clipExtent,
      scale = _ref.scale,
      translate = _ref.translate,
      center = _ref.center,
      rotate = _ref.rotate,
      precision = _ref.precision,
      fitExtent = _ref.fitExtent,
      fitSize = _ref.fitSize,
      centroid = _ref.centroid,
      graticule = _ref.graticule,
      graticuleLines = _ref.graticuleLines,
      graticuleOutline = _ref.graticuleOutline,
      className = _ref.className,
      innerRef = _ref.innerRef,
      pointRadius = _ref.pointRadius,
      restProps = _objectWithoutProperties(_ref, ['data', 'projection', 'projectionFunc', 'clipAngle', 'clipExtent', 'scale', 'translate', 'center', 'rotate', 'precision', 'fitExtent', 'fitSize', 'centroid', 'graticule', 'graticuleLines', 'graticuleOutline', 'className', 'innerRef', 'pointRadius']);

  var currProjection = projectionMapping[projection]();

  if (clipAngle) currProjection.clipAngle(clipAngle);
  if (clipExtent) currProjection.clipExtent(clipExtent);
  if (scale) currProjection.scale(scale);
  if (translate) currProjection.translate(translate);
  if (center) currProjection.center(center);
  if (rotate) currProjection.rotate(rotate);
  if (precision) currProjection.rotate(precision);
  if (fitExtent) currProjection.fitExtent.apply(currProjection, _toConsumableArray(fitExtent));
  if (fitSize) currProjection.fitSize.apply(currProjection, _toConsumableArray(fitSize));

  var path = (0, _d3Geo.geoPath)().projection(currProjection);

  if (pointRadius) path.pointRadius(pointRadius);

  return _react2.default.createElement(
    _group.Group,
    { className: 'vx-geo' },
    graticule && !graticule.foreground && _react2.default.createElement(_Graticule2.default, _extends({ graticule: function graticule(g) {
        return path(g);
      } }, graticule)),
    graticuleLines && !graticuleLines.foreground && _react2.default.createElement(_Graticule2.default, _extends({ lines: function lines(g) {
        return path(g);
      } }, graticuleLines)),
    graticuleOutline && !graticuleOutline.foreground && _react2.default.createElement(_Graticule2.default, _extends({ outline: function outline(g) {
        return path(g);
      } }, graticuleOutline)),
    data.map(function (feature, i) {
      var c = void 0;
      if (centroid) c = path.centroid(feature);
      return _react2.default.createElement(
        'g',
        { key: projection + '-' + i },
        _react2.default.createElement('path', _extends({
          className: (0, _classnames2.default)('vx-geo-' + projection, className),
          d: path(feature),
          ref: innerRef && innerRef(feature, i)
        }, (0, _additionalProps2.default)(restProps, _extends({}, feature, {
          index: i,
          centroid: c
        })))),
        centroid && centroid(c, feature)
      );
    }),
    projectionFunc && projectionFunc(currProjection),
    graticule && graticule.foreground && _react2.default.createElement(_Graticule2.default, _extends({ graticule: function graticule(g) {
        return path(g);
      } }, graticule)),
    graticuleLines && graticuleLines.foreground && _react2.default.createElement(_Graticule2.default, _extends({ lines: function lines(g) {
        return path(g);
      } }, graticuleLines)),
    graticuleOutline && graticuleOutline.foreground && _react2.default.createElement(_Graticule2.default, _extends({ outline: function outline(g) {
        return path(g);
      } }, graticuleOutline))
  );
}

Projection.propTypes = {
  data: _propTypes2.default.array.isRequired,
  projection: _propTypes2.default.string,
  projectionFunc: _propTypes2.default.func,
  clipAngle: _propTypes2.default.number,
  clipExtent: _propTypes2.default.array,
  scale: _propTypes2.default.number,
  translate: _propTypes2.default.array,
  center: _propTypes2.default.array,
  rotate: _propTypes2.default.array,
  precision: _propTypes2.default.number,
  fitExtent: _propTypes2.default.array,
  fitSize: _propTypes2.default.array,
  centroid: _propTypes2.default.func,
  className: _propTypes2.default.string
};